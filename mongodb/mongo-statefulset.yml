apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app : mongo
spec:
  serviceName: "mongo"
  replicas: 2
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: mongo:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
          name: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME_FILE
          value: /etc/mongo-credentials/MONGO_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD_FILE
          value: /etc/mongo-credentials/MONGO_ROOT_PASSWORD
        volumeMounts:
        - name: mongo-persistent-volume
          mountPath: /data/db
        - name: mongo-configmap
          mountPath: /config
        - name: mongo-secret
          mountPath: /etc/mongo-credentials
      volumes:
      - name: mongo-persistent-volume
        persistentVolumeClaim:
          claimName: mongo-pv-claim
      - name: mongo-configmap
        configMap:
          name: mongo-configmap
          items:
            - key: mongo.conf
              path: mongo.conf
      - name: mongo-secret
        secret:
          secretName: mongo-secret
